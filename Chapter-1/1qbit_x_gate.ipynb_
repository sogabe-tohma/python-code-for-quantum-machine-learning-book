{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyObC4xSLDxunpuGH8HJTUPS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"ttyEflBdXpmQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708396357540,"user_tz":-540,"elapsed":17060,"user":{"displayName":"曽我部東馬","userId":"05225258884665500112"}},"outputId":"8b3e0a8a-2773-461c-81bd-83dd9718a302"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting qiskit[visualization]\n","  Downloading qiskit-1.0.0-cp38-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m5.6/5.6 MB\u001b[0m \u001b[31m20.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting rustworkx>=0.14.0 (from qiskit[visualization])\n","  Downloading rustworkx-0.14.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.2 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.2/2.2 MB\u001b[0m \u001b[31m66.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy<2,>=1.17 in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (1.25.2)\n","Requirement already satisfied: scipy>=1.5 in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (1.11.4)\n","Requirement already satisfied: sympy>=1.3 in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (1.12)\n","Collecting dill>=0.3 (from qiskit[visualization])\n","  Downloading dill-0.3.8-py3-none-any.whl (116 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m14.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: python-dateutil>=2.8.0 in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (2.8.2)\n","Collecting stevedore>=3.0.0 (from qiskit[visualization])\n","  Downloading stevedore-5.1.0-py3-none-any.whl (49 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m49.6/49.6 kB\u001b[0m \u001b[31m6.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (4.9.0)\n","Collecting symengine>=0.11 (from qiskit[visualization])\n","  Downloading symengine-0.11.0-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (39.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m39.4/39.4 MB\u001b[0m \u001b[31m15.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: matplotlib>=3.3 in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (3.7.1)\n","Requirement already satisfied: pydot in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (1.4.2)\n","Requirement already satisfied: Pillow>=4.2.1 in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (9.4.0)\n","Collecting pylatexenc>=1.4 (from qiskit[visualization])\n","  Downloading pylatexenc-2.10.tar.gz (162 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m162.6/162.6 kB\u001b[0m \u001b[31m17.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: seaborn>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from qiskit[visualization]) (0.13.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3->qiskit[visualization]) (1.2.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3->qiskit[visualization]) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3->qiskit[visualization]) (4.48.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3->qiskit[visualization]) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3->qiskit[visualization]) (23.2)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3->qiskit[visualization]) (3.1.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.0->qiskit[visualization]) (1.16.0)\n","Requirement already satisfied: pandas>=1.2 in /usr/local/lib/python3.10/dist-packages (from seaborn>=0.9.0->qiskit[visualization]) (1.5.3)\n","Collecting pbr!=2.1.0,>=2.0.0 (from stevedore>=3.0.0->qiskit[visualization])\n","  Downloading pbr-6.0.0-py2.py3-none-any.whl (107 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m107.5/107.5 kB\u001b[0m \u001b[31m12.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy>=1.3->qiskit[visualization]) (1.3.0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.2->seaborn>=0.9.0->qiskit[visualization]) (2023.4)\n","Building wheels for collected packages: pylatexenc\n","  Building wheel for pylatexenc (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pylatexenc: filename=pylatexenc-2.10-py3-none-any.whl size=136816 sha256=4de0d679a4af43fa72e2eb85929dbb2e3591a625db336c49bd264f9b86ae5dc5\n","  Stored in directory: /root/.cache/pip/wheels/d3/31/8b/e09b0386afd80cfc556c00408c9aeea5c35c4d484a9c762fd5\n","Successfully built pylatexenc\n","Installing collected packages: pylatexenc, symengine, rustworkx, pbr, dill, stevedore, qiskit\n","Successfully installed dill-0.3.8 pbr-6.0.0 pylatexenc-2.10 qiskit-1.0.0 rustworkx-0.14.0 stevedore-5.1.0 symengine-0.11.0\n"]}],"source":["!pip install qiskit[visualization]"]},{"cell_type":"code","source":["!pip install qiskit-aer"],"metadata":{"id":"M1CcvMIucNSE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708396380484,"user_tz":-540,"elapsed":8444,"user":{"displayName":"曽我部東馬","userId":"05225258884665500112"}},"outputId":"ee4fff87-85da-4701-9e99-4b81fe728249"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting qiskit-aer\n","  Downloading qiskit_aer-0.13.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.3/12.3 MB\u001b[0m \u001b[31m52.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: qiskit>=0.45.0 in /usr/local/lib/python3.10/dist-packages (from qiskit-aer) (1.0.0)\n","Requirement already satisfied: numpy>=1.16.3 in /usr/local/lib/python3.10/dist-packages (from qiskit-aer) (1.25.2)\n","Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.10/dist-packages (from qiskit-aer) (1.11.4)\n","Requirement already satisfied: psutil>=5 in /usr/local/lib/python3.10/dist-packages (from qiskit-aer) (5.9.5)\n","Requirement already satisfied: rustworkx>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from qiskit>=0.45.0->qiskit-aer) (0.14.0)\n","Requirement already satisfied: sympy>=1.3 in /usr/local/lib/python3.10/dist-packages (from qiskit>=0.45.0->qiskit-aer) (1.12)\n","Requirement already satisfied: dill>=0.3 in /usr/local/lib/python3.10/dist-packages (from qiskit>=0.45.0->qiskit-aer) (0.3.8)\n","Requirement already satisfied: python-dateutil>=2.8.0 in /usr/local/lib/python3.10/dist-packages (from qiskit>=0.45.0->qiskit-aer) (2.8.2)\n","Requirement already satisfied: stevedore>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from qiskit>=0.45.0->qiskit-aer) (5.1.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from qiskit>=0.45.0->qiskit-aer) (4.9.0)\n","Requirement already satisfied: symengine>=0.11 in /usr/local/lib/python3.10/dist-packages (from qiskit>=0.45.0->qiskit-aer) (0.11.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.0->qiskit>=0.45.0->qiskit-aer) (1.16.0)\n","Requirement already satisfied: pbr!=2.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from stevedore>=3.0.0->qiskit>=0.45.0->qiskit-aer) (6.0.0)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy>=1.3->qiskit>=0.45.0->qiskit-aer) (1.3.0)\n","Installing collected packages: qiskit-aer\n","Successfully installed qiskit-aer-0.13.3\n"]}]},{"cell_type":"code","source":["import numpy as np\n","from qiskit import *\n","from qiskit_aer  import AerSimulator\n","from qiskit.visualization import plot_histogram\n","\n","simulator =  AerSimulator()\n","\n","circuit=QuantumCircuit(1,1)\n","circuit.x(0)\n","circuit.measure(0,0)\n","\n","result=simulator.run(circuit,shots=100).result()\n","counts=result.get_counts(circuit)\n","print(f\"\\nTotal counts for 0 and 1 are:{counts}\\n\")\n","plot_histogram(counts)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":503},"id":"m2yrHQkJeMCc","executionInfo":{"status":"ok","timestamp":1708397097619,"user_tz":-540,"elapsed":618,"user":{"displayName":"曽我部東馬","userId":"05225258884665500112"}},"outputId":"4d9952d4-3f49-494c-f81c-2f8c973863f0"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Total counts for 0 and 1 are:{'1': 100}\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["<Figure size 700x500 with 1 Axes>"],"image/png":"\n"},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["circuit.draw('mpl')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"TSh1cE8Ngqvb","executionInfo":{"status":"ok","timestamp":1698653338457,"user_tz":-540,"elapsed":399,"user":{"displayName":"曽我部東馬","userId":"05225258884665500112"}},"outputId":"98f4a04e-ce84-4d08-a3ce-2a0d9ca04c32"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Figure size 269.064x200.667 with 1 Axes>"],"image/png":"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\n"},"metadata":{},"execution_count":5}]}]}